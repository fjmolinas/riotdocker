---
name: build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - '*'
jobs:
  build-riotdocker-base:
    name: Build and push images
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push riotdocker-base
        uses: docker/build-push-action@v2
        with:
          context: ./riotdocker-base
          file: ./riotdocker-base/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          pull: true
          push: ${{ github.event_name == 'push' }}
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/riotdocker-base:latest
          build-args: |
            DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  build-static-test-tools:
    needs: build-riotdocker-base
    name: Build and push static-test-tools
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push static-test-tools
        uses: docker/build-push-action@v2
        with:
          context: ./static-test-tools
          file: ./static-test-tools/Dockerfile
          platforms: linux/amd64
          pull: true
          push: ${{ github.event_name == 'push' }}
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/static-test-tools:latest
          build-args: |
            DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  build-riotbuild-essentials:
    needs: build-static-test-tools
    name: Build and push riotbuild-essentials
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push riotbuild-essentials
        uses: docker/build-push-action@v2
        with:
          context: ./riotbuild-essentials
          file: ./riotbuild-essentials/Dockerfile
          platforms: linux/amd64
          pull: true
          push: ${{ github.event_name == 'push' }}
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/riotbuild-essentials:latest
          build-args: |
            DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  build-toolchains-base:
    needs: build-riotdocker-base
    strategy:
      fail-fast: false
      matrix:
        toolchain: [gcc-arm-none-eabi.lite]
    name: Build and push ${{ matrix.toolchain }}
    env:
      ARM_VERSION: gcc-arm-none-eabi-9-2019-q4-major
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push ${{ matrix.toolchain }}
        uses: docker/build-push-action@v2
        with:
          context: ./toolchains
          file: ./toolchains/${{ matrix.toolchain }}.Dockerfile
          platforms: linux/amd64,linux/arm64
          pull: true
          push: ${{ github.event_name == 'push' }}
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.toolchain }}:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.toolchain }}:${{ env.ARM_VERSION }}
          build-args: |
            DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}
            ARM_VERSION=${{ env.ARM_VERSION }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  build-toolchains:
    needs:
      - build-riotbuild-essentials
      - build-toolchains-base
    strategy:
      fail-fast: false
      matrix:
        toolchain: [gcc-arm-none-eabi]
    name: Build and push ${{ matrix.toolchain }}
    env:
      ARM_VERSION: gcc-arm-none-eabi-9-2019-q4-major
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push ${{ matrix.toolchain }}
        uses: docker/build-push-action@v2
        with:
          context: ./toolchains
          file: ./toolchains/${{ matrix.toolchain }}.Dockerfile
          platforms: linux/amd64
          pull: true
          push: ${{ github.event_name == 'push' }}
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.toolchain }}:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.toolchain }}:${{ env.ARM_VERSION }}
          build-args: |
            DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}
            ARM_VERSION=${{ env.ARM_VERSION }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  build-riotbuild:
    needs:
      - build-static-test-tools
      - build-toolchains
    name: Build and push riotbuild
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push riotbuild
        uses: docker/build-push-action@v2
        with:
          context: ./riotbuild
          file: ./riotbuild/Dockerfile
          platforms: linux/amd64
          pull: true
          push: ${{ github.event_name == 'push' }}
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/riotbuild:latest
          build-args: |
            DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  build-flashers:
    needs: build-riotdocker-base
    strategy:
      fail-fast: false
      matrix:
        flasher: [jlink]
    name: Build and push ${{ matrix.flasher }}
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push ${{ matrix.flasher }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./flashers/${{ matrix.flasher }}.Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          pull: true
          push: ${{ github.event_name == 'push' }}
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.flasher }}:latest
          build-args: |
            DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
